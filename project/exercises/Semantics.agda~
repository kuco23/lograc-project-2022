open import TruncationLogic

module Semantics (AtomicFormula : Set) (ts : truncation-structure)  where -- TODO: Separate files for these different modules!

       open import Data.Bool renaming (_∧_ to _and_; _∨_ to _or_)
       open import TruncationLogic
       open import Level

       open import Data.Unit renaming (⊤ to One)
       -- TODO: Import empty type, product type, sum type, renaming as needed
       open Formula
       
       open truncation-structure ts public

       HProp0 = HProp {ts} zero 
       ℙ = HProp0
       Env = AtomicFormula → ℙ
       open import Data.Bool.Properties
       open import Data.Product

       {- Tu bi se naj to naredilo kot v semantics.agda iz Ex5
       Jaz, tega ne znam. Bom se moral vrniti sem. Ali pa
       ti narediš! -}
       ⟦_⟧ : Formula → Env → ℙ
       ⟦ ` P ⟧ η = η P
       ⟦ ⊤ ⟧ η = ⟨ One , (λ x y → {!!}) ⟩
       ⟦ ⊥ ⟧ η = ⟨ {!!} , {!!} ⟩
       ⟦ P ∧ Q ⟧ η = {!!!!}
       ⟦ P ∨ Q ⟧ η = {!!}
       ⟦ P ⇒ Q ⟧ η = {!!}
       ⟦ G P ⟧ η = {!!}
       ⟦ P U Q ⟧ η = {!!}
       ⟦ X P ⟧ η = {!!}
